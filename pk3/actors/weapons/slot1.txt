// ==============
// SLOT 1 - Melee
// ==============

ACTOR FistPuff
{
	ActiveSound ""
	AttackSound ""
	SeeSound ""
	+PUFFONACTORS
	+NOEXTREMEDEATH
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
	Crash:
		TNT1 A 1 A_PlaySound("fist/wall")
		Stop
	XDeath:
		TNT1 A 1 A_PlaySound("fist/hit")
		Stop
	}
}

ACTOR FistUpgrade : Inventory
{
	Inventory.MaxAmount 1
}

ACTOR FistUpgradeGiver : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0
		TNT1 A 0 ACS_NamedExecute("UpgradeFist")
		Stop
	}
}

ACTOR FistUpgradeGiverPWYB : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0
		TNT1 A 0 ACS_NamedExecute("UpgradeFistPWYB")
		Stop
	}
}

ACTOR MartialArts : CashWeapon replaces Fist
{
	Weapon.SelectionOrder 1
	Weapon.Kickback 40
	DamageType Melee
	Weapon.SlotNumber 1
	Decal ""
	+NOALERT
	+NOEXTREMEDEATH
	States
	{
	Ready:
		PUNG A 1 A_WeaponReady
		Loop
	Deselect:
		PUNG A 0 A_Lower
		PUNG A 1 A_Lower
		Loop
	Select:
		PUNG A 0 A_Raise
		PUNG A 1 A_Raise
		Loop
	Fire:
		PUNG A 0 A_JumpIfInventory("FistUpgrade", 1, "FireFast")
		PUNG A 1 Offset(0,33)
		PUNG A 1 Offset(0,35)
		PUNG A 1 Offset(0,39)
		PUNG A 1 Offset(0,44)
		PUNG A 1 Offset(0,56)
	Refire:
		TNT1 A 1 A_PlaySound("fist/miss")
		PUNG BC 1 Offset(1,33) A_SetAngle(angle - 1.0)
		PUNG D 0 A_CustomPunch(4,0,0,"FistPuff")
		PUNG D 1 Offset(10,35) A_SetAngle(angle - 1.5)
		PUNG D 1 Offset(40,40) A_SetAngle(angle - 0.5)
		PUNG D 1 Offset(80,50) A_SetAngle(angle + 0.5)
		PUNG D 1 Offset(120,65) A_SetAngle(angle + 1.0)
		PUNG D 1 Offset(160,90) A_SetAngle(angle + 0.5)
		TNT1 A 4
		TNT1 A 0 A_Refire
		PUNG A 1 Offset(5,56)
		PUNG A 1 Offset(4,44)
		PUNG A 1 Offset(3,39)
		PUNG A 1 Offset(2,35)
		PUNG A 1 Offset(1,33)
		Goto Ready
	Hold:
		TNT1 A 1 A_PlaySound("fist/miss")
		PUNG EF 1 Offset(-1,33) A_SetAngle(angle + 1.0)
		PUNG G 0 A_CustomPunch(4,0,0,"FistPuff")
		PUNG G 1 Offset(-10,35) A_SetAngle(angle + 1.5)
		PUNG G 1 Offset(-40,40) A_SetAngle(angle + 0.5)
		PUNG G 1 Offset(-80,50) A_SetAngle(angle - 0.5)
		PUNG G 1 Offset(-120,65) A_SetAngle(angle - 1.0)
		PUNG G 1 Offset(-160,90) A_SetAngle(angle - 0.5)
		TNT1 A 4
		TNT1 A 0 A_Refire("Refire")
		PUNG A 1 Offset(5,56)
		PUNG A 1 Offset(4,44)
		PUNG A 1 Offset(3,39)
		PUNG A 1 Offset(2,35)
		PUNG A 1 Offset(1,33)
		Goto Ready
	FireFast:
		PUNG A 1 Offset(0,33)
		PUNG A 1 Offset(0,35)
	RefireFast:
		PUNG B 0 A_PlaySound("fist/miss")
		PUNG B 0 Offset(1,33) A_SetAngle(angle - 0.5)
		PUNG B 1 A_CustomPunch(6,0,0,"FistPuff")
		PUNG C 1 A_SetAngle(angle - 0.8)
		PUNG D 1 A_SetAngle(angle + 0.5)
		PUNG C 1 A_SetAngle(angle + 0.8)
		PUNG B 1 A_SetAngle(angle + 1.1)
		TNT1 A 0 A_Refire("HoldFast")
		PUNG A 1 Offset(5,56)
		PUNG A 1 Offset(4,44)
		PUNG A 1 Offset(3,39)
		PUNG A 1 Offset(2,35)
		PUNG A 1 Offset(1,33)
		Goto Ready
	HoldFast:
		PUNG E 0 A_PlaySound("fist/miss")
		PUNG E 0 Offset(1,33) A_SetAngle(angle + 0.5)
		PUNG E 1 A_CustomPunch(6,0,0,"FistPuff")
		PUNG F 1 A_SetAngle(angle + 0.8)
		PUNG G 1 A_SetAngle(angle - 0.5)
		PUNG F 1 A_SetAngle(angle - 0.8)
		PUNG E 1 A_SetAngle(angle - 1.1)
		TNT1 A 0 A_Refire("RefireFast")
		PUNG A 1 Offset(5,56)
		PUNG A 1 Offset(4,44)
		PUNG A 1 Offset(3,39)
		PUNG A 1 Offset(2,35)
		PUNG A 1 Offset(1,33)
		Goto Ready
	}
}

ACTOR CrowbarPuff
{
	ActiveSound ""
	AttackSound ""
	SeeSound ""
	+PUFFONACTORS
	+NOEXTREMEDEATH
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
	Crash:
		TNT1 A 1 A_PlaySound("crowbar/wall")
		Stop
	XDeath:
		TNT1 A 1 A_PlaySound("crowbar/hit")
		Stop
	}
}

ACTOR CrowbarThiefPuff : CrowbarPuff
{
	DamageType "Thief"
}

ACTOR CrowbarUpgrade : Inventory{}

ACTOR CrowbarUpgradeGiverPWYB : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0 A_JumpIfInventory("Crowbar", 1, "Upgrade")
		TNT1 A 0 A_Print("You need a CROWBAR.")
		Stop
	Upgrade:
		TNT1 A 0 ACS_NamedExecute("UpgradeCrowbarPWYB")
		Stop
	}
}

ACTOR Crowbar : CashWeapon
{
	Weapon.SelectionOrder 999
	Weapon.Kickback 20
	DamageType Melee
	Weapon.SlotNumber 1
	Decal ""
	+NOALERT
	+NOAUTOFIRE
	States
	{
	Ready:
		CBAR A 1 A_WeaponReady
		Loop
	Deselect:
		CBAR A 1 A_Lower
		Loop
	Select:
		CBAR A 1 A_Raise
		Loop
	Fire:
		CBAR A 1 Offset(10,40)
		CBAR A 1 Offset(20,55)
		CBAR A 1 Offset(30,75)
		CBAR A 1 Offset(40,110)
	Hold:
		TNT1 A 10
		CBAR B 1 Offset(1, 32) A_PlayWeaponSound("crowbar/swing")
		CBAR B 0 A_JumpIfInventory("CrowbarUpgrade", 1, "Thief")
		CBAR C 1 A_CustomPunch(80, 1, 0, "CrowbarPuff", 96)
	FireFinish:
		CBAR DEF 1
		TNT1 A 10
		TNT1 A 1 A_Refire
		CBAR A 1 Offset(40,110)
		CBAR A 1 Offset(30,75)
		CBAR A 1 Offset(20,55)
		CBAR A 1 Offset(10,40)
		Goto Ready
	Thief:
		CBAR C 1 A_CustomPunch(80, 1, 0, "CrowbarThiefPuff", 96)
		Goto FireFinish
	}
}

ACTOR KnifeVampPuff : CrowbarPuff
{
	DamageType "Thief"
}

ACTOR KnifeUpgrade : Inventory{}

ACTOR KnifeUpgradeGiverPWYB : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0 A_JumpIfInventory("CHCKnife", 1, "Upgrade")
		TNT1 A 0 A_Print ("You need a KNIFE.")
		Stop
	Upgrade:
		TNT1 A 0 ACS_NamedExecute("UpgradeKnifePWYB")
		Stop
	}
}

ACTOR CHCKnife : CashWeapon
{
	+NOALERT
	Weapon.SlotNumber 1
	Weapon.Kickback 0
	Decal ""
	States
	{
	Select:
		KNIF A 0 A_Raise
		KNIF A 1 A_Raise
		Loop
	Deselect:
		KNIF A 0 A_Lower
		KNIF A 1 A_Lower
		Loop
	Ready:
		KNIF A 0 A_JumpIfInventory("KnifeUpgrade", 1, "ReadyVamp")
		KNIF A 1 A_WeaponReady
		Loop
	ReadyVamp:
		KNIF BCDC 2 A_WeaponReady
		Goto Ready
	Fire:
		KNIF A 0 A_JumpIfInventory("KnifeUpgrade", 1, "FireVamp")
		KNIF A 1 Offset(10,28)
		KNIF A 1 Offset(30,20)
		KNIF A 1 Offset(60,10)
		KNIF A 1 Offset(100,12)
		KNIF A 1 Offset(150,14)
		KNIF A 1 Offset(180,16)
		KNIF A 1 Offset(200,20)
		KNIF A 1 Offset(210,22) A_PlaySound("knife/miss", 5)
		KNIF A 1 Offset(215,23)
		KNIF A 1 Offset(180,1)
		KNIF A 1 Offset(130,-15)
		KNIF A 1 Offset(50,-40) A_CustomPunch(15,0,0,"KnifePuff",80)
		KNIF A 1 Offset(-10,-60)
		KNIF A 1 Offset(-80,-55)
		KNIF A 1 Offset(-160,-50)
		TNT1 A 3
		KNIF A 1 Offset(-30,82)
		KNIF A 1 Offset(-20,62)
		KNIF A 1 Offset(-10,42)
		KNIF A 1 Offset(0,32)
		Goto Ready
	FireVamp:
		KNIF B 1 Offset(10,28)
		KNIF B 1 Offset(30,20)
		KNIF B 1 Offset(60,10)
		KNIF B 1 Offset(100,12)
		KNIF B 1 Offset(150,14)
		KNIF B 1 Offset(180,16)
		KNIF B 1 Offset(200,20)
		KNIF C 1 Offset(210,22) A_PlaySound("knife/miss", 5)
		KNIF C 1 Offset(215,23)
		KNIF D 1 Offset(180,1)
		KNIF D 1 Offset(130,-15)
		KNIF D 1 Offset(50,-40) A_CustomPunch(15,0,0,"KnifePuff",80,0.25)
		KNIF C 1 Offset(-10,-60)
		KNIF C 1 Offset(-80,-55)
		KNIF B 1 Offset(-160,-50)
		TNT1 A 3
		KNIF B 1 Offset(-30,82)
		KNIF B 1 Offset(-20,62)
		KNIF B 1 Offset(-10,42)
		KNIF B 1 Offset(0,32)
		Goto Ready
	}
}

ACTOR KnifePuff
{
	ActiveSound ""
	AttackSound ""
	SeeSound ""
	+PUFFONACTORS
	+NOEXTREMEDEATH
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
	Crash:
		TNT1 A 1 A_PlaySound("knife/wall")
		Stop
	XDeath:
		TNT1 A 1 A_PlaySound("knife/stab")
		Stop
	}
}

ACTOR FireAxePuff
{
	ActiveSound ""
	AttackSound ""
	SeeSound ""
	+PUFFONACTORS
	+NOEXTREMEDEATH
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
	Crash:
		TNT1 A 1 A_PlaySound("axe/wall")
		Stop
	XDeath:
		TNT1 A 1 A_PlaySound("axe/flesh")
		Stop
	}
}

ACTOR FireAxe : CashWeapon
{
	Weapon.SlotNumber 1
	States
	{
	Select:
		AXEG A 1 A_Raise
		Loop
	Deselect:
		AXEG A 1 A_Lower
		Loop
	Ready:
		AXEG A 1 A_WeaponReady
		Loop
	Fire:
		AXEG D 0 A_SetAngle(angle - 0.1)
		AXEG D 0 A_SetPitch(pitch - 0.1)
		AXEG A 1 Offset(1,33)
		AXEG D 0 A_SetAngle(angle - 0.2)
		AXEG D 0 A_SetPitch(pitch - 0.2)
		AXEG A 1 Offset(12,38)
		AXEG D 0 A_SetAngle(angle - 0.3)
		AXEG D 0 A_SetPitch(pitch - 0.3)
		AXEG A 1 Offset(21,43)
		AXEG D 0 A_SetAngle(angle - 0.4)
		AXEG D 0 A_SetPitch(pitch - 0.4)
		AXEG B 1 Offset(1,33)
		AXEG D 0 A_SetAngle(angle - 0.5)
		AXEG D 0 A_SetPitch(pitch - 0.5)
		AXEG B 1 Offset(12,38)
		AXEG D 0 A_SetAngle(angle - 0.6)
		AXEG D 0 A_SetPitch(pitch - 0.6)
		AXEG B 1 Offset(21,43)
		AXEG D 0 A_SetAngle(angle - 0.7)
		AXEG D 0 A_SetPitch(pitch - 0.7)
		AXEG C 1 Offset(1,33)
		AXEG D 0 A_SetAngle(angle - 0.5)
		AXEG D 0 A_SetPitch(pitch - 0.5)
		AXEG C 1 Offset(12,38)
		AXEG D 0 A_SetAngle(angle - 0.3)
		AXEG D 0 A_SetPitch(pitch - 0.3)
		AXEG C 1 Offset(21,43)
		TNT1 A 12
		TNT1 A 1 A_Refire("Hold")
		Goto Release
	Hold:
		TNT1 A 1
		TNT1 A 1 A_Refire
		Goto Release
	Release:
		TNT1 A 1
		AXEG D 0 A_SetAngle(angle + 0.1)
		AXEG D 0 A_SetPitch(pitch + 0.1)
		TNT1 A 1
		AXEG D 0 A_SetAngle(angle + 0.4)
		AXEG D 0 A_SetPitch(pitch + 0.4)
		TNT1 A 1
		AXEG D 0 A_SetAngle(angle + 0.7)
		AXEG D 0 A_SetPitch(pitch + 0.7)
		TNT1 A 1
		AXEG D 0 A_SetAngle(angle + 1.0)
		AXEG D 0 A_SetPitch(pitch + 1.0)
		TNT1 A 1
		AXEG D 0 A_SetAngle(angle + 1.3)
		AXEG D 0 A_SetPitch(pitch + 1.3)
		AXEG D 1 Offset(60,1) A_PlaySound("axe/swing", 5)
		AXEG D 0 A_SetAngle(angle + 1.5)
		AXEG D 0 A_SetPitch(pitch + 1.5)
		AXEG D 1 Offset(20,20)
		AXEG D 0 A_SetAngle(angle + 1.8)
		AXEG D 0 A_SetPitch(pitch + 1.8)
		AXEG D 1 Offset(-20,40)
		AXEG D 0 A_SetAngle(angle + 2.1)
		AXEG D 0 A_SetPitch(pitch + 2.1)
		AXEG D 1 Offset(-60,60) A_CustomPunch(150, 1, 0, "FireAxePuff", 111)
		AXEG D 0 A_SetAngle(angle + 1.5)
		AXEG D 0 A_SetPitch(pitch + 1.5)
		AXEG D 1 Offset(-100,80)
		AXEG D 0 A_SetAngle(angle + 1.2)
		AXEG D 0 A_SetPitch(pitch + 1.2)
		AXEG D 1 Offset(-140,110)
		AXEG D 0 A_SetAngle(angle + 1.0)
		AXEG D 0 A_SetPitch(pitch + 1.0)
		AXEG D 1 Offset(-200,140)
		AXEG D 0 A_SetAngle(angle + 0.9)
		AXEG D 0 A_SetPitch(pitch + 0.9)
		AXEG D 1 Offset(-240,170)
		AXEG D 0 A_SetAngle(angle + 0.7)
		AXEG D 0 A_SetPitch(pitch + 0.7)
		AXEG D 1 Offset(-280,200)
		AXEG D 0 A_SetAngle(angle + 0.4)
		AXEG D 0 A_SetPitch(pitch + 0.4)
		AXEG D 1 Offset(-320,240)
		TNT1 A 20
		TNT1 A 1 A_Refire("Hold2")
		AXEG D 1 Offset(-40,150)
		AXEG D 1 Offset(-35,130)
		AXEG D 1 Offset(-30,110)
		AXEG D 1 Offset(-25,90)
		AXEG A 1 Offset(-20,70)
		AXEG A 1 Offset(-5,50)
		AXEG A 1 Offset(5,30)
		Goto Ready
	Hold2:
		TNT1 A 1
		TNT1 A 1 A_Refire("Hold2")
		Goto Release2
	Release2:
		TNT1 A 1
		AXEG E 0 A_SetAngle(angle - 0.1)
		AXEG E 0 A_SetPitch(pitch + 0.1)
		TNT1 A 1
		AXEG E 0 A_SetAngle(angle - 0.4)
		AXEG E 0 A_SetPitch(pitch + 0.4)
		TNT1 A 1
		AXEG E 0 A_SetAngle(angle - 0.7)
		AXEG E 0 A_SetPitch(pitch + 0.7)
		TNT1 A 1
		AXEG E 0 A_SetAngle(angle - 1.0)
		AXEG E 0 A_SetPitch(pitch + 1.0)
		TNT1 A 1
		AXEG E 0 A_SetAngle(angle - 1.3)
		AXEG E 0 A_SetPitch(pitch + 1.3)
		AXEG E 1 Offset(-60,1) A_PlaySound("axe/swing", 5)
		AXEG E 0 A_SetAngle(angle - 1.5)
		AXEG E 0 A_SetPitch(pitch + 1.5)
		AXEG E 1 Offset(-20,20)
		AXEG E 0 A_SetAngle(angle - 1.8)
		AXEG E 0 A_SetPitch(pitch + 1.8)
		AXEG E 1 Offset(20,40)
		AXEG E 0 A_SetAngle(angle - 2.1)
		AXEG E 0 A_SetPitch(pitch + 2.1)
		AXEG E 1 Offset(60,60) A_CustomPunch(150, 1, 0, "FireAxePuff", 111)
		AXEG E 0 A_SetAngle(angle - 1.5)
		AXEG E 0 A_SetPitch(pitch + 1.5)
		AXEG E 1 Offset(100,80)
		AXEG E 0 A_SetAngle(angle - 1.2)
		AXEG E 0 A_SetPitch(pitch + 1.2)
		AXEG E 1 Offset(140,110)
		AXEG E 0 A_SetAngle(angle - 1.0)
		AXEG E 0 A_SetPitch(pitch + 1.0)
		AXEG E 1 Offset(200,140)
		AXEG E 0 A_SetAngle(angle - 0.9)
		AXEG E 0 A_SetPitch(pitch + 0.9)
		AXEG E 1 Offset(240,170)
		AXEG E 0 A_SetAngle(angle - 0.7)
		AXEG E 0 A_SetPitch(pitch + 0.7)
		AXEG E 1 Offset(280,200)
		AXEG E 0 A_SetAngle(angle - 0.4)
		AXEG E 0 A_SetPitch(pitch + 0.4)
		AXEG E 1 Offset(320,240)
		TNT1 A 20
		TNT1 A 1 A_Refire("Hold")
		AXEG D 1 Offset(-40,150)
		AXEG D 1 Offset(-35,130)
		AXEG D 1 Offset(-30,110)
		AXEG D 1 Offset(-25,90)
		AXEG A 1 Offset(-20,70)
		AXEG A 1 Offset(-5,50)
		AXEG A 1 Offset(5,30)
		Goto Ready
	}
}

ACTOR FireAxeUpgrade : Inventory{}

ACTOR FireAxeUpgradeGiverPWYB : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0 A_JumpIfInventory("FireAxe", 1, "Upgrade")
		TNT1 A 0 A_Print ("You need a FIRE AXE.")
		Stop
	Upgrade:
		TNT1 A 0 ACS_NamedExecute("UpgradeFireAxePWYB")
		Stop
	}
}